{"name": "test_reg_cr[<model.model_registr_cr.ModelRegistrCR object at 0x000002A6C1587B80>]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00FB7413+2389011]\n\tOrdinal0 [0x00F49F61+1941345]\n\tOrdinal0 [0x00E3C658+837208]\n\tOrdinal0 [0x00E691DD+1020381]\n\tOrdinal0 [0x00E6949B+1021083]\n\tOrdinal0 [0x00E96032+1204274]\n\tOrdinal0 [0x00E84194+1130900]\n\tOrdinal0 [0x00E94302+1196802]\n\tOrdinal0 [0x00E83F66+1130342]\n\tOrdinal0 [0x00E5E546+976198]\n\tOrdinal0 [0x00E5F456+980054]\n\tGetHandleVerifier [0x01169632+1727522]\n\tGetHandleVerifier [0x0121BA4D+2457661]\n\tGetHandleVerifier [0x0104EB81+569713]\n\tGetHandleVerifier [0x0104DD76+566118]\n\tOrdinal0 [0x00F50B2B+1968939]\n\tOrdinal0 [0x00F55988+1989000]\n\tOrdinal0 [0x00F55A75+1989237]\n\tOrdinal0 [0x00F5ECB1+2026673]\n\tBaseThreadInitThunk [0x753B62C4+36]\n\tRtlSubscribeWnfStateChangeNotification [0x77D50F79+1081]\n\tRtlSubscribeWnfStateChangeNotification [0x77D50F44+1028]", "trace": "app = <pages.application.Application object at 0x000002A6C1671F30>, cr_data = <model.model_registr_cr.ModelRegistrCR object at 0x000002A6C1587B80>\n\n    @allure.description(\"Registration new cour reporter\")\n    @pytest.mark.parametrize(\"cr_data\", cr_data, ids=[repr(i) for i in cr_data])\n    def test_reg_cr(app, cr_data):\n    \tapp.cr.cr_registration_form(cr_data.bar_number)\n    \tassert cr_data.bar_number == app.cr.license_num_input_attribute()\n    \tapp.cr.cr_data_form(cr_data.email, cr_data.phone_number, cr_data.full_name, cr_data.issuance,\n    \t\tcr_data.expiration_data, cr_data.address_one, cr_data.addres_two)\n>   \tapp.cr.availability_button()\n\ntests\\test_registration.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\registr_cr.py:52: in availability_button\n    WebDriverWait(wd, 5).until(EC.element_to_be_clickable((By.NAME , \"stepFourContinueBtn\"))).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2f85e8096d2e45d7b832cd5160c47318\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000002A6C1EC1CF0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except InvalidSelectorException as e:\n                raise e\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00FB7413+2389011]\nE       \tOrdinal0 [0x00F49F61+1941345]\nE       \tOrdinal0 [0x00E3C658+837208]\nE       \tOrdinal0 [0x00E691DD+1020381]\nE       \tOrdinal0 [0x00E6949B+1021083]\nE       \tOrdinal0 [0x00E96032+1204274]\nE       \tOrdinal0 [0x00E84194+1130900]\nE       \tOrdinal0 [0x00E94302+1196802]\nE       \tOrdinal0 [0x00E83F66+1130342]\nE       \tOrdinal0 [0x00E5E546+976198]\nE       \tOrdinal0 [0x00E5F456+980054]\nE       \tGetHandleVerifier [0x01169632+1727522]\nE       \tGetHandleVerifier [0x0121BA4D+2457661]\nE       \tGetHandleVerifier [0x0104EB81+569713]\nE       \tGetHandleVerifier [0x0104DD76+566118]\nE       \tOrdinal0 [0x00F50B2B+1968939]\nE       \tOrdinal0 [0x00F55988+1989000]\nE       \tOrdinal0 [0x00F55A75+1989237]\nE       \tOrdinal0 [0x00F5ECB1+2026673]\nE       \tBaseThreadInitThunk [0x753B62C4+36]\nE       \tRtlSubscribeWnfStateChangeNotification [0x77D50F79+1081]\nE       \tRtlSubscribeWnfStateChangeNotification [0x77D50F44+1028]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:89: TimeoutException"}, "description": "Registration new cour reporter", "attachments": [{"name": "log", "source": "6869e53f-825b-4500-8c33-d8becf1f7011-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "cfd9d00d-1aff-4bde-bceb-e03fcf38d346-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "cr_data", "value": "<model.model_registr_cr.ModelRegistrCR object at 0x000002A6C1587B80>"}], "start": 1651219266877, "stop": 1651219279735, "uuid": "c9855373-9d3a-406b-99ee-8e74c620b37a", "historyId": "c4c4a0b7edc8ae0c791177b62d2c61f6", "testCaseId": "6be592db202b201c196bab3b2f291a8a", "fullName": "tests.test_registration#test_reg_cr", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_registration"}, {"name": "host", "value": "EvgenPS"}, {"name": "thread", "value": "3004-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_registration"}]}