{"name": "test_deposition_create_manually_edit[Danielle Theresa Kennedy : testatt@inboxbear.com;916-345-8432;Daniel Vlad Tabakh;attorney0@yahoo.com;510-288-8737-Natalie M King : opcounsel@getnada.com;831-582-3389;Cristoforo Andrea Giovannotto;evgen20@yahoo.com;650-328-7480-CR Automation : testcr20@getnada.com;255-448-2569-Test_deposition2022-17-31-17 : deponent;256698;256697]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00587413+2389011]\n\tOrdinal0 [0x00519F61+1941345]\n\tOrdinal0 [0x0040C658+837208]\n\tOrdinal0 [0x004391DD+1020381]\n\tOrdinal0 [0x0043949B+1021083]\n\tOrdinal0 [0x00466032+1204274]\n\tOrdinal0 [0x00454194+1130900]\n\tOrdinal0 [0x00464302+1196802]\n\tOrdinal0 [0x00453F66+1130342]\n\tOrdinal0 [0x0042E546+976198]\n\tOrdinal0 [0x0042F456+980054]\n\tGetHandleVerifier [0x00739632+1727522]\n\tGetHandleVerifier [0x007EBA4D+2457661]\n\tGetHandleVerifier [0x0061EB81+569713]\n\tGetHandleVerifier [0x0061DD76+566118]\n\tOrdinal0 [0x00520B2B+1968939]\n\tOrdinal0 [0x00525988+1989000]\n\tOrdinal0 [0x00525A75+1989237]\n\tOrdinal0 [0x0052ECB1+2026673]\n\tBaseThreadInitThunk [0x741462C4+36]\n\tRtlSubscribeWnfStateChangeNotification [0x770C0F79+1081]\n\tRtlSubscribeWnfStateChangeNotification [0x770C0F44+1028]", "trace": "app = <pages.application.Application object at 0x000002A7D7647520>, deposition = Test_deposition2022-17-31-17 : deponent;256698;256697\ncr = CR Automation : testcr20@getnada.com;255-448-2569\nop = Natalie M King : opcounsel@getnada.com;831-582-3389;Cristoforo Andrea Giovannotto;evgen20@yahoo.com;650-328-7480\natt = Danielle Theresa Kennedy : testatt@inboxbear.com;916-345-8432;Daniel Vlad Tabakh;attorney0@yahoo.com;510-288-8737\n\n    @allure.description(\"Edit deposition with change date\")\n    @pytest.mark.parametrize(\"deposition\", deposition, ids=[repr(x) for x in deposition])\n    @pytest.mark.parametrize(\"cr\", cr, ids=[repr(x) for x in cr])\n    @pytest.mark.parametrize(\"op\", op, ids=[repr(x) for x in op])\n    @pytest.mark.parametrize(\"att\", attorneys, ids=[repr(x) for x in attorneys])\n    def test_deposition_create_manually_edit(app, deposition, cr, op, att):\n    \tapp.session.login(login=\"testatt@inboxbear.com\", password=\"1234Qwer\")\n    \tapp.deposition.name_deposition(deposition.name)\n    \tapp.deposition.deponent_deposition(deposition.deponent)\n    \tapp.deposition.location_deposition()\n    \tapp.deposition.attorneys(deposition.sbn_op1, op.name)\n    \tapp.deposition.set_time_manually()\n    \tapp.deposition.upload_doc()\n    \tapp.deposition.delivery(cr.name)\n    \tapp.deposition.finish_depo_attorney(deposition.name,att.name,att.email,att.phone,op.name,op.email\n    \t\t,op.phone,cr.name,cr.email,cr.phone)\n    \tapp.deposition.depo_dashboard_manualy(deposition.name)\n>   \tapp.deposition.edit_date_in_depo()\n\ntests\\test_createdepo_manually.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\deposition_case.py:544: in edit_date_in_depo\n    WebDriverWait(wd, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, \"button[name='attorneyHomeBtnEdit']\"))).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e83deb4cc3d95618d118848430f684fb\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000002A7D8123BE0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except InvalidSelectorException as e:\n                raise e\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00587413+2389011]\nE       \tOrdinal0 [0x00519F61+1941345]\nE       \tOrdinal0 [0x0040C658+837208]\nE       \tOrdinal0 [0x004391DD+1020381]\nE       \tOrdinal0 [0x0043949B+1021083]\nE       \tOrdinal0 [0x00466032+1204274]\nE       \tOrdinal0 [0x00454194+1130900]\nE       \tOrdinal0 [0x00464302+1196802]\nE       \tOrdinal0 [0x00453F66+1130342]\nE       \tOrdinal0 [0x0042E546+976198]\nE       \tOrdinal0 [0x0042F456+980054]\nE       \tGetHandleVerifier [0x00739632+1727522]\nE       \tGetHandleVerifier [0x007EBA4D+2457661]\nE       \tGetHandleVerifier [0x0061EB81+569713]\nE       \tGetHandleVerifier [0x0061DD76+566118]\nE       \tOrdinal0 [0x00520B2B+1968939]\nE       \tOrdinal0 [0x00525988+1989000]\nE       \tOrdinal0 [0x00525A75+1989237]\nE       \tOrdinal0 [0x0052ECB1+2026673]\nE       \tBaseThreadInitThunk [0x741462C4+36]\nE       \tRtlSubscribeWnfStateChangeNotification [0x770C0F79+1081]\nE       \tRtlSubscribeWnfStateChangeNotification [0x770C0F44+1028]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:89: TimeoutException"}, "description": "Edit deposition with change date", "attachments": [{"name": "log", "source": "435a2846-12c0-45b6-9b2e-980685c491f4-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "74cab28e-5057-45fc-b62e-615db4c2337d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "att", "value": "Danielle Theresa Kennedy : testatt@inboxbear.com;916-345-8432;Daniel Vlad Tabakh;attorney0@yahoo.com;510-288-8737"}, {"name": "op", "value": "Natalie M King : opcounsel@getnada.com;831-582-3389;Cristoforo Andrea Giovannotto;evgen20@yahoo.com;650-328-7480"}, {"name": "cr", "value": "CR Automation : testcr20@getnada.com;255-448-2569"}, {"name": "deposition", "value": "Test_deposition2022-17-31-17 : deponent;256698;256697"}], "start": 1651070386526, "stop": 1651070496172, "uuid": "09070186-14b5-4939-90e7-1f586c143d13", "historyId": "4c711b466b946a69bfed66592776b312", "testCaseId": "04139ee1ae9c7e8e0a04ebdc646c644f", "fullName": "tests.test_createdepo_manually#test_deposition_create_manually_edit", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_createdepo_manually"}, {"name": "host", "value": "EvgenPS"}, {"name": "thread", "value": "1844-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_createdepo_manually"}]}