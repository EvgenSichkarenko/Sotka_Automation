{"name": "test_unregistered_user_signup[Daniel Vlad Tabakh : qaautomationatt@yahoo.com;510-288-8737-Cristoforo Andrea Giovannotto : qaautomationop@yahoo.com;650-328-7480-AutomationCR : qaautomationcr@yahoo.com;255-448-2579-Jeka unregister : qaautomationopunreg@yahoo.com;3806620466-Test_deposition2022-14-34-25 : deponent;000002;000003-000000 : testqa000000@yahoo.com;None;1234Qwer;123;12;510-288-8737;address12345-emails0]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"button[name='checkOppCounselInfoInvite']\"}\n  (Session info: chrome=103.0.5060.66)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x004B6463+2188387]\n\tOrdinal0 [0x0044E461+1762401]\n\tOrdinal0 [0x00363D78+802168]\n\tOrdinal0 [0x00391880+989312]\n\tOrdinal0 [0x00391B1B+989979]\n\tOrdinal0 [0x003BE912+1173778]\n\tOrdinal0 [0x003AC824+1099812]\n\tOrdinal0 [0x003BCC22+1166370]\n\tOrdinal0 [0x003AC5F6+1099254]\n\tOrdinal0 [0x00386BE0+945120]\n\tOrdinal0 [0x00387AD6+948950]\n\tGetHandleVerifier [0x007571F2+2712546]\n\tGetHandleVerifier [0x0074886D+2652765]\n\tGetHandleVerifier [0x0054002A+520730]\n\tGetHandleVerifier [0x0053EE06+516086]\n\tOrdinal0 [0x0045468B+1787531]\n\tOrdinal0 [0x00458E88+1805960]\n\tOrdinal0 [0x00458F75+1806197]\n\tOrdinal0 [0x00461DF1+1842673]\n\tBaseThreadInitThunk [0x772862C4+36]\n\tRtlSubscribeWnfStateChangeNotification [0x77910F79+1081]\n\tRtlSubscribeWnfStateChangeNotification [0x77910F44+1028]", "trace": "app = <pages.application.Application object at 0x000001C309DCF5B0>, deposition = Test_deposition2022-14-34-25 : deponent;000002;000003\ncr_voting = AutomationCR : qaautomationcr@yahoo.com;255-448-2579, op = Cristoforo Andrea Giovannotto : qaautomationop@yahoo.com;650-328-7480\natt = Daniel Vlad Tabakh : qaautomationatt@yahoo.com;510-288-8737, op_unreg = Jeka unregister : qaautomationopunreg@yahoo.com;3806620466\nemails = <model.model_email.Email object at 0x000001C309C737C0>, regisrt_data = 000000 : testqa000000@yahoo.com;None;1234Qwer;123;12;510-288-8737;address12345\n\n    @allure.description(\"Test case 1.6, Unregistered op sign up\")\n    @pytest.mark.parametrize(\"emails\", email)\n    @pytest.mark.parametrize(\"regisrt_data\", regisrt_data, ids=[repr(i) for i in regisrt_data])\n    @pytest.mark.parametrize(\"deposition\", deposition, ids=[repr(x) for x in deposition])\n    @pytest.mark.parametrize(\"op_unreg\", op_unreg, ids=[repr(x) for x in op_unreg])\n    @pytest.mark.parametrize(\"cr_voting\", cr_voting, ids=[repr(x) for x in cr_voting])\n    @pytest.mark.parametrize(\"op\", op, ids=[repr(x) for x in op])\n    @pytest.mark.parametrize(\"att\", attorneys, ids=[repr(x) for x in attorneys])\n    def test_unregistered_user_signup(app, deposition, cr_voting, op, att, op_unreg, emails,regisrt_data):\n    \tapp.session.login(login=\"qaautomationatt@yahoo.com\", password=\"ZXcv@123580\")\n    \tapp.deposition.name_deposition(deposition.name)\n    \tapp.deposition.deponent_deposition(deposition.deponent)\n    \tapp.deposition.location_deposition()\n>   \tapp.regAttorney.add_op_unregister(deposition.sbn_op_unreg, op_unreg.sbn)\n\ntests\\test_signUp_signIn.py:98: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\registr_attorney_page.py:290: in add_op_unregister\n    wd.find_element(By.CSS_SELECTOR, \"button[name='checkOppCounselInfoInvite']\").click()\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1244: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:424: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001C309DCFB20>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...cribeWnfStateChangeNotification [0x77910F79+1081]\\\\n\\\\tRtlSubscribeWnfStateChangeNotification [0x77910F44+1028]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"button[name='checkOppCounselInfoInvite']\"}\nE         (Session info: chrome=103.0.5060.66)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x004B6463+2188387]\nE       \tOrdinal0 [0x0044E461+1762401]\nE       \tOrdinal0 [0x00363D78+802168]\nE       \tOrdinal0 [0x00391880+989312]\nE       \tOrdinal0 [0x00391B1B+989979]\nE       \tOrdinal0 [0x003BE912+1173778]\nE       \tOrdinal0 [0x003AC824+1099812]\nE       \tOrdinal0 [0x003BCC22+1166370]\nE       \tOrdinal0 [0x003AC5F6+1099254]\nE       \tOrdinal0 [0x00386BE0+945120]\nE       \tOrdinal0 [0x00387AD6+948950]\nE       \tGetHandleVerifier [0x007571F2+2712546]\nE       \tGetHandleVerifier [0x0074886D+2652765]\nE       \tGetHandleVerifier [0x0054002A+520730]\nE       \tGetHandleVerifier [0x0053EE06+516086]\nE       \tOrdinal0 [0x0045468B+1787531]\nE       \tOrdinal0 [0x00458E88+1805960]\nE       \tOrdinal0 [0x00458F75+1806197]\nE       \tOrdinal0 [0x00461DF1+1842673]\nE       \tBaseThreadInitThunk [0x772862C4+36]\nE       \tRtlSubscribeWnfStateChangeNotification [0x77910F79+1081]\nE       \tRtlSubscribeWnfStateChangeNotification [0x77910F44+1028]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchElementException"}, "description": "Test case 1.6, Unregistered op sign up", "attachments": [{"name": "log", "source": "350358dd-89bb-40e7-9bc1-5816ac71f3ec-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "012a2265-28fa-4ca5-bae3-d9cb36734e34-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "att", "value": "Daniel Vlad Tabakh : qaautomationatt@yahoo.com;510-288-8737"}, {"name": "op", "value": "Cristoforo Andrea Giovannotto : qaautomationop@yahoo.com;650-328-7480"}, {"name": "cr_voting", "value": "AutomationCR : qaautomationcr@yahoo.com;255-448-2579"}, {"name": "op_unreg", "value": "Jeka unregister : qaautomationopunreg@yahoo.com;3806620466"}, {"name": "deposition", "value": "Test_deposition2022-14-34-25 : deponent;000002;000003"}, {"name": "regisrt_data", "value": "000000 : testqa000000@yahoo.com;None;1234Qwer;123;12;510-288-8737;address12345"}, {"name": "emails", "value": "<model.model_email.Email object at 0x000001C309C737C0>"}], "start": 1656591295714, "stop": 1656591317488, "uuid": "3b344f39-86f3-4c26-9988-cf8ee32ceae4", "historyId": "5ef356cdcefa1d5b9d2507d3318dd144", "testCaseId": "7fecae958df816f35d42ca78a13a45c7", "fullName": "tests.test_signUp_signIn#test_unregistered_user_signup", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_signUp_signIn"}, {"name": "host", "value": "EvgenPS"}, {"name": "thread", "value": "3296-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_signUp_signIn"}]}