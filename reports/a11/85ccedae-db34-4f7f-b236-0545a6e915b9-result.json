{"name": "test_add_secretary[qaautomationsecrdel@yahoo.com : Rita QA,Secretary QA-emails0]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[text()='Contact person was invited successfully']\"}\n  (Session info: chrome=102.0.5005.115)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00E2D953+2414931]\n\tOrdinal0 [0x00DBF5E1+1963489]\n\tOrdinal0 [0x00CAC6B8+837304]\n\tOrdinal0 [0x00CD9500+1021184]\n\tOrdinal0 [0x00CD979B+1021851]\n\tOrdinal0 [0x00D06502+1205506]\n\tOrdinal0 [0x00CF44E4+1131748]\n\tOrdinal0 [0x00D04812+1198098]\n\tOrdinal0 [0x00CF42B6+1131190]\n\tOrdinal0 [0x00CCE860+976992]\n\tOrdinal0 [0x00CCF756+980822]\n\tGetHandleVerifier [0x0109CC62+2510274]\n\tGetHandleVerifier [0x0108F760+2455744]\n\tGetHandleVerifier [0x00EBEABA+551962]\n\tGetHandleVerifier [0x00EBD916+547446]\n\tOrdinal0 [0x00DC5F3B+1990459]\n\tOrdinal0 [0x00DCA898+2009240]\n\tOrdinal0 [0x00DCA985+2009477]\n\tOrdinal0 [0x00DD3AD1+2046673]\n\tBaseThreadInitThunk [0x74B362C4+36]\n\tRtlSubscribeWnfStateChangeNotification [0x77B00F79+1081]\n\tRtlSubscribeWnfStateChangeNotification [0x77B00F44+1028]", "trace": "app = <pages.application.Application object at 0x000001CB39FBF2B0>, secretary = qaautomationsecrdel@yahoo.com : Rita QA,Secretary QA\nemails = <model.model_email.Email object at 0x000001CB39FCB070>\n\n    @allure.description(\"Test case 1.18, 1.10, Add new secretary for attorney company\")\n    @pytest.mark.parametrize(\"emails\", email)\n    @pytest.mark.parametrize(\"secretary\", regisrt_secr, ids=[repr(x) for x in regisrt_secr])\n    def test_add_secretary(app, secretary, emails):\n    \tapp.session.login(login=\"qaautomationatt@yahoo.com\", password=\"ZXcv@123580\")\n>   \tapp.secretary.contact_person( secr_old_email=\"qaautomationsecr@yahoo.com\",\n    \t\tsecr_new_email=secretary.secr_email, secr_fullname=secretary.secr_new_name)\n\ntests\\test_signUp_signIn.py:176: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\add_seecretary.py:27: in contact_person\n    valid = wd.find_element(By.XPATH,\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1244: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:424: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001CB39FBFEE0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...cribeWnfStateChangeNotification [0x77B00F79+1081]\\\\n\\\\tRtlSubscribeWnfStateChangeNotification [0x77B00F44+1028]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[text()='Contact person was invited successfully']\"}\nE         (Session info: chrome=102.0.5005.115)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00E2D953+2414931]\nE       \tOrdinal0 [0x00DBF5E1+1963489]\nE       \tOrdinal0 [0x00CAC6B8+837304]\nE       \tOrdinal0 [0x00CD9500+1021184]\nE       \tOrdinal0 [0x00CD979B+1021851]\nE       \tOrdinal0 [0x00D06502+1205506]\nE       \tOrdinal0 [0x00CF44E4+1131748]\nE       \tOrdinal0 [0x00D04812+1198098]\nE       \tOrdinal0 [0x00CF42B6+1131190]\nE       \tOrdinal0 [0x00CCE860+976992]\nE       \tOrdinal0 [0x00CCF756+980822]\nE       \tGetHandleVerifier [0x0109CC62+2510274]\nE       \tGetHandleVerifier [0x0108F760+2455744]\nE       \tGetHandleVerifier [0x00EBEABA+551962]\nE       \tGetHandleVerifier [0x00EBD916+547446]\nE       \tOrdinal0 [0x00DC5F3B+1990459]\nE       \tOrdinal0 [0x00DCA898+2009240]\nE       \tOrdinal0 [0x00DCA985+2009477]\nE       \tOrdinal0 [0x00DD3AD1+2046673]\nE       \tBaseThreadInitThunk [0x74B362C4+36]\nE       \tRtlSubscribeWnfStateChangeNotification [0x77B00F79+1081]\nE       \tRtlSubscribeWnfStateChangeNotification [0x77B00F44+1028]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchElementException"}, "description": "Test case 1.18, 1.10, Add new secretary for attorney company", "steps": [{"name": "New email for secretary is 'qaautomationsecrdel@yahoo.com''", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[text()='Contact person was invited successfully']\"}\n  (Session info: chrome=102.0.5005.115)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00E2D953+2414931]\n\tOrdinal0 [0x00DBF5E1+1963489]\n\tOrdinal0 [0x00CAC6B8+837304]\n\tOrdinal0 [0x00CD9500+1021184]\n\tOrdinal0 [0x00CD979B+1021851]\n\tOrdinal0 [0x00D06502+1205506]\n\tOrdinal0 [0x00CF44E4+1131748]\n\tOrdinal0 [0x00D04812+1198098]\n\tOrdinal0 [0x00CF42B6+1131190]\n\tOrdinal0 [0x00CCE860+976992]\n\tOrdinal0 [0x00CCF756+980822]\n\tGetHandleVerifier [0x0109CC62+2510274]\n\tGetHandleVerifier [0x0108F760+2455744]\n\tGetHandleVerifier [0x00EBEABA+551962]\n\tGetHandleVerifier [0x00EBD916+547446]\n\tOrdinal0 [0x00DC5F3B+1990459]\n\tOrdinal0 [0x00DCA898+2009240]\n\tOrdinal0 [0x00DCA985+2009477]\n\tOrdinal0 [0x00DD3AD1+2046673]\n\tBaseThreadInitThunk [0x74B362C4+36]\n\tRtlSubscribeWnfStateChangeNotification [0x77B00F79+1081]\n\tRtlSubscribeWnfStateChangeNotification [0x77B00F44+1028]\n\n", "trace": "  File \"C:\\Python_project\\Sotka_auto\\pages\\add_seecretary.py\", line 27, in contact_person\n    valid = wd.find_element(By.XPATH,\n  File \"c:\\python_project\\sotka_auto\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1244, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n  File \"c:\\python_project\\sotka_auto\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 424, in execute\n    self.error_handler.check_response(response)\n  File \"c:\\python_project\\sotka_auto\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 247, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1655301752518, "stop": 1655301754183}], "attachments": [{"name": "log", "source": "0f1d5f16-b961-46cd-8bc2-c9526ac68ae8-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "d4149eb5-5d6d-4a76-9898-730f9d4b1cc3-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "secretary", "value": "qaautomationsecrdel@yahoo.com : Rita QA,Secretary QA"}, {"name": "emails", "value": "<model.model_email.Email object at 0x000001CB39FCB070>"}], "start": 1655301743133, "stop": 1655301754189, "uuid": "96add17d-289a-4a75-9ab1-216dc81ecff7", "historyId": "a8394b1f4ebb3649c184a1d83ce0b671", "testCaseId": "5aa41545382b2ba7204d5d12b4ae9298", "fullName": "tests.test_signUp_signIn#test_add_secretary", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_signUp_signIn"}, {"name": "host", "value": "EvgenPS"}, {"name": "thread", "value": "944-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_signUp_signIn"}]}